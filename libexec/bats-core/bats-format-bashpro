#!/usr/bin/env bash
set -e

while [[ "$#" -ne 0 ]]; do
  case "$1" in
  -T)
    BATS_ENABLE_TIMING="-T"
    ;;
  esac
  shift
done

_bashpro_file=""
declare -i begin_index=0 test_active=0
header_pattern='[0-9]+\.\.[0-9]+'
IFS= read -r header

if [[ "$header" =~ $header_pattern ]]; then
  #  printf "TAP version 13\n"
  printf "%s\n" "$header"
else
  # If the first line isn't a TAP plan, print it and pass the rest through
  printf '%s\n' "$header"
  exec cat
fi

declare -i test_output_lines=0
yaml_block_open=''
add_yaml_entry() {
  if [[ -z "$yaml_block_open" ]]; then
    printf "  ---\n"
  fi
  [[ -n "$1" ]] && printf "  %s: %s\n" "$1" "$2"
  yaml_block_open=1
}

close_previous_yaml_block() {
  if [[ -n "$yaml_block_open" ]]; then
    printf "  ...\n"
    yaml_block_open=''
  fi
}

while IFS= read -r line; do
  case "$line" in
  'begin '*)
    test_active=0
    ((++begin_index))
    test_name="${line#* $begin_index }"
    printf "# _id=%d, _file=%s, _test=%s\n" "$begin_index" "$_bashpro_file" "$test_name"
    ;;
  'ok '*)
    close_previous_yaml_block
    test_output_lines=0
    if [[ -n "$BATS_ENABLE_TIMING" ]]; then
      timing_expr="(ok [0-9]+ .+) in ([0-9]+)ms$"
      if [[ "$line" =~ $timing_expr ]]; then
        printf "%s\n" "${BASH_REMATCH[1]}"
        add_yaml_entry "duration_ms" "${BASH_REMATCH[2]}"
      else
        echo "Could not match output line to timing regex: $line" >&2
        exit 1
      fi
    else
      printf "%s\n" "${line}"
    fi
    ;;
  'not ok '*)
    close_previous_yaml_block
    test_active=1
    test_output_lines=0
    timing_expr="not ok [0-9]+ (.)+ in ([0-9])+ms$"
    if [[ -n "$BATS_ENABLE_TIMING" ]]; then
      if [[ "$line" =~ $timing_expr ]]; then
        printf "%s\n" "${BATS_REMATCH[1]}"
        add_yaml_entry "duration_ms" "${BASH_REMATCH[2]}"
      else
        echo "Could not match failure line to timing regex: $line" >&2
        exit 1
      fi
    else
      printf "%s\n" "${line}"
    fi
    ;;
  '# '*)
    if ((test_active == 1 && test_output_lines == 0)); then
      add_yaml_entry
    fi
    ((++test_output_lines))
    printf "# %s\n" "${line:2}"
    ;;
  'suite '*)
    _bashpro_file="${line:6}"
    ;;
  *)
    printf  "%s\n" "${line}"
    ;;
  esac
done
# close the final block if there was one
close_previous_yaml_block
